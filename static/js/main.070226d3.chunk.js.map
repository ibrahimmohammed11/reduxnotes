{"version":3,"sources":["images/note-taking.png","Components/ListReminders/index.jsx","actionCreator/ReminderActions.js","Components/Home/Home.jsx","App.jsx","reportWebVitals.js","Reducers/Reducer.js","Redux/Store.js","index.js","Components/Home/style.module.css","Components/ListReminders/style.module.css"],"names":["ListReminders","this","props","reminders","removeReminder","className","map","reminder","key","Styles","listStyle","text","moment","Date","date","fromNow","onClick","id","deleteSt","Component","connect","type","Home","state","addReminder","clearReminder","notes","src","img1","alt","imgSt","value","onChange","e","setState","target","placeholder","placeholderText","inpSt","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","prevState","action","read_cookie","Math","random","bake_cookie","filter","el","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.070226d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/note-taking.657f6e03.png\";","import React, { Component, Fragment } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { removeReminder } from \"../../actionCreator/ReminderActions\";\r\nimport moment from 'moment';\r\nimport Styles from \"./style.module.css\";\r\n\r\nclass ListReminders extends Component {\r\n    render() {\r\n        let { reminders, removeReminder } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className={` list-unstyled text-left my-3`}>\r\n                    {reminders?.map((reminder, key) => {\r\n                        return (<div key={key} className={Styles.listStyle}>\r\n                            <div>\r\n                                <li><strong>Note {key + 1} :</strong> {reminder.text}</li>\r\n                                <li><strong>Time :</strong> {moment(new Date(reminder.date)).fromNow()}</li>\r\n                            </div>\r\n                            <div>\r\n                                <li onClick={() => removeReminder(reminder.id)}><i className={`${Styles.deleteSt} fas fa-trash`}></i></li>\r\n                            </div>\r\n                        </div>)\r\n                    })}\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reminders) {\r\n    return { reminders }\r\n}\r\n\r\nexport default connect(mapStateToProps, { removeReminder })(ListReminders);","export const addReminder = (text, date) => {\r\n  // كل مره و ال ديسبت و هى جايه بتجيب معاها اخر نسخة لل ستيت\r\n  // function bt3ml return lel action\r\n  const action = { type: \"ADDREMINDER\", text, date };\r\n  return action;\r\n};\r\n\r\nexport const removeReminder = (id) => {\r\n  const action = { type: \"REMOVEREMINDER\", id };\r\n  return action;\r\n};\r\n\r\nexport const clearReminder = () => {\r\n  const action = { type: \"CLEARREMINDER\" };\r\n  return action;\r\n};\r\n","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addReminder, clearReminder } from \"../../actionCreator/ReminderActions\";\r\nimport img1 from \"../../images/note-taking.png\";\r\nimport ListReminders from \"../ListReminders\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Styles from \"./style.module.css\";\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        text: \"\",\r\n        date: new Date(),\r\n    }\r\n\r\n    render() {\r\n        let { addReminder, clearReminder } = this.props;\r\n        let { text, date } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <div className={Styles.notes}>\r\n                        <img src={img1} alt=\"img1\" className={Styles.imgSt} />\r\n                        <h4 className=\"my-3 text-white\">What should u do?</h4>\r\n                        <input value={text} onChange={(e) => this.setState({ text: e.target.value })} type=\"text\" placeholder=\"What should u do..?\" className=\"form-control\" />\r\n                        <DatePicker\r\n                            placeholderText=\"Enter Date\"\r\n                            value={date}\r\n                            className={`${Styles.inpSt} form-control my-2`}\r\n                            selected={date}\r\n                            onChange={(date) => this.setState({ date: date })}\r\n                            showTimeSelect\r\n                            timeFormat=\"HH:mm\"\r\n                            dateFormat=\"MMMM d, yyyy, h:mm:aa\"\r\n                            timeCaption=\"time\"\r\n                        />\r\n                        <button\r\n                            onClick={() => {\r\n                                addReminder(text, date)\r\n                                this.setState({ text: \"\", date: \"\" }) // عشان افضي ال inputs\r\n                            }}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            Add Reminder\r\n                        </button>\r\n                        <button onClick={clearReminder} className=\"btn btn-danger btn-block\">Clear Reminder</button>\r\n\r\n                        <ListReminders />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, { addReminder, clearReminder })(Home);","import { Component, Fragment } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Home from './Components/Home/Home';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Home />\n      </Fragment>\n    )\n  }\n}\n\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { bake_cookie, read_cookie } from \"sfcookies\";\r\n\r\nfunction rootReducer(prevState = [], action) {\r\n  let reminders = null;\r\n  prevState = read_cookie(\"reminders\");\r\n  if (action.type === \"ADDREMINDER\") {\r\n    reminders = [\r\n      ...prevState,\r\n      { text: action.text, date: action.date, id: Math.random() },\r\n    ];\r\n    bake_cookie(\"reminders\", reminders);\r\n    return reminders;\r\n  } else if (action.type === \"REMOVEREMINDER\") {\r\n    //عملت ال فلتر علي ال ستيت كلها عشان هي اللي شايله الداتا كلها\r\n    reminders = prevState.filter((el) => el.id !== action.id);\r\n    bake_cookie(\"reminders\", reminders);\r\n    return reminders;\r\n  } else if (action.type === \"CLEARREMINDER\") {\r\n    reminders = [];\r\n    bake_cookie(\"reminders\", reminders);\r\n    return reminders;\r\n  } else {\r\n    return prevState;\r\n  }\r\n}\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../Reducers/Reducer\";\r\n\r\n// let initialStore = {\r\n//   reminders: [],\r\n// };\r\n\r\nlet store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgSt\":\"style_imgSt__1X3M9\",\"notes\":\"style_notes__3Pty7\",\"inpSt\":\"style_inpSt__2Zl_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyle\":\"style_listStyle__3xcSS\",\"deleteSt\":\"style_deleteSt__1p_m3\"};"],"sourceRoot":""}